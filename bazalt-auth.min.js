!function(){define("bazalt-auth/app",["jquery","angular","angular-resource","angular-cookies"],function(a,b){"use strict";return b.module("bazalt-auth",["ngCookies"])}),define("bazalt-auth/controllers/RegisterCtrl",["bazalt-auth/app"],function(a){a.controller("RegisterCtrl",["$scope","$location","UserResource","blConfig","$q",function(a,b,c,d,e){a.user={},a.registerUser=function(){var e=new c(a.user);a.loading=!0,e.$register(function(){a.loading=!1,b.path(d.baseUrl()+"/activationSent")},function(b){400==b.status&&a.register.invalidForm(b.data)})},a.checkEmail=function(a){var b=e.defer();return c.checkEmail({email:a},function(a){b.resolve(a.valid)},function(a){b.reject(a)}),b.promise},a.resendActivation=function(){$http.post("/account/resendActivation",a.form).success(function(){b.path("/activationResent")}).error(function(b){a.error=b.error.message})}}])}),define("bazalt-auth/controllers/LoginCtrl",["bazalt-auth/app"],function(a){a.controller("LoginCtrl",["$scope","$location","blAcl",function(a,b,c){a.form={},c.isLoggedIn()&&b.path("/user/profile"),a.loginUser=function(){var d=a.form;c.login(d,function(){b.path("/user/profile")},function(b){400==b.status&&a.login.invalidForm(b.data)})}}])}),define("bazalt-auth/controllers/LogoutCtrl",["bazalt-auth/app"],function(a){a.controller("LogoutCtrl",["$scope","$location","blAcl",function(a,b,c){c.logout(function(){b.path("/")})}])}),define("bazalt-auth/controllers/ModalCtrl",["bazalt-auth/app"],function(a){a.controller("ModalCtrl",["$scope",function(a){this.setModel=function(b){a.$apply(function(){a.data=b})},a.setModel=this.setModel}])}),define("bazalt-auth/controllers",["bazalt-auth/controllers/RegisterCtrl","bazalt-auth/controllers/LoginCtrl","bazalt-auth/controllers/LogoutCtrl","bazalt-auth/controllers/ModalCtrl"],function(){}),define("bazalt-auth/directives/ngUnique",["bazalt-auth/app"],function(a){a.directive("ngUnique",["$parse",function(a){return{require:"ngModel",scope:!1,link:function(b,c,d,e){var f=a(d.ngUnique);c.on("blur",function(){b.$apply(function(){f(b,{$value:c.val()}).then(function(a){e.$setValidity("unique",a),a||e.$setViewValue(void 0)})})})}}}])}),define("bazalt-auth/directives/bvCompare",["bazalt-auth/app"],function(a){a.directive("bvCompare",[function(){return{require:"ngModel",scope:{compareField:"=bvCompare"},link:function(a,b,c,d){d.$parsers.unshift(function(b){var c=b==a.compareField;return d.$setValidity("bvCompare",c),c?b:void 0}),d.$formatters.unshift(function(b){return d.$setValidity("bvCompare",b==a.compareField),b})}}}])}),define("bazalt-auth/directives/blAccessLevel",["bazalt-auth/app"],function(a){a.directive("blAccessLevel",["blAcl","$rootScope",function(a,b){return{restrict:"A",scope:{accessLevel:"=blAccessLevel"},link:function(c,d){function e(){c.user&&c.accessLevel&&$(d).toggle(a.authorize(c.accessLevel,a.user().role)>=1)}c.user=a.user(),b.$watch("user",function(){e()},!0),c.$watch("accessLevel",function(){e()},!0)}}}])}),define("bazalt-auth/directives/remoteForm",["bazalt-auth/app"],function(a){a.directive("remoteForm",["$log",function(a){return{restrict:"A",scope:!1,require:"form",controller:["$scope",function(a){a.invalidForm=function(){}}],link:function(b,c,d,e){e.invalidForm=function(b){a.error(b),angular.forEach(b,function(b,c){var d=e[c]||null;d||a.error("Field not found",c),angular.forEach(b,function(b,c){d?d.$setValidity(c,!1):a.error(b)})})}}}}])}),define("bazalt-auth/directives",["bazalt-auth/directives/ngUnique","bazalt-auth/directives/bvCompare","bazalt-auth/directives/blAccessLevel","bazalt-auth/directives/remoteForm"],function(){}),define("bazalt-auth/factories/UserResource",["bazalt-auth/app"],function(a){a.factory("UserResource",["$resource","$q","blConfig",function(a,b,c){return a(c.apiEndpoint(),{},{login:{method:"POST"},logout:{method:"DELETE"},checkEmail:{method:"GET",params:{action:"checkEmail"}},register:{method:"PUT"}})}])}),define("bazalt-auth/factories/errorHttpInterceptor",["bazalt-auth/app"],function(a){a.factory("errorHttpInterceptor",["$q",function(a){return function(b){return b.then(function(a){return a},function(b){return 500==b.status&&console.error(b.data.error.message,b.data.error.file),405==b.status&&console.error(b.data),a.reject(b)})}}])}),define("bazalt-auth/factories",["bazalt-auth/factories/UserResource","bazalt-auth/factories/errorHttpInterceptor"],function(){}),define("bazalt-auth/blConfig",["bazalt-auth/app"],function(a){"use strict";a.provider("blConfig",[function(){this.$baseUrl="/user",this.$templateUrl="/views/user",this.$apiEndpoint="/rest.php/user",this.baseUrl=function(a){return this.$baseUrl=a,this},this.templateUrl=function(a){return this.$templateUrl=a,this},this.apiEndpoint=function(a){return this.$apiEndpoint=a,this},this.$get=function(){var a=this;return{baseUrl:function(){return a.$baseUrl},templateUrl:function(){return a.$templateUrl},apiEndpoint:function(){return a.$apiEndpoint},levels:function(){return a.$levels},roles:function(){return a.$roles}}},this.$buildRoles=function(a){var b="01",c={};for(var d in a){var e=parseInt(b,2);c[a[d]]={bitMask:e,title:a[d]},b=(e<<1).toString(2)}return c},this.$buildAccessLevels=function(a,b){var c={};for(var d in a)if("string"==typeof a[d])if("*"==a[d]){var e="";for(var f in b)e+="1";c[d]={bitMask:parseInt(e,2),title:a[d]}}else console.log("Access Control Error: Could not parse '"+a[d]+"' as access definition for level '"+d+"'");else{var e=0;for(var f in a[d])b.hasOwnProperty(a[d][f])?e|=b[a[d][f]].bitMask:console.log("Access Control Error: Could not find role '"+a[d][f]+"' in registered roles while building access for '"+d+"'");c[d]={bitMask:e,title:a[d][f]}}return c},this.$roles=this.$buildRoles(["public","user","admin"]),this.$levels=this.$buildAccessLevels({"public":"*",anon:["public"],user:["user","admin"],admin:["admin"]},this.$roles)}]).run(["$rootScope","$location","blConfig","blAcl",function(a,b,c,d){a.$on("$routeChangeStart",function(e,f){a.error=null,a.user=d.user(),a.userRoles=c.roles(),a.acl=c.levels(),angular.isDefined(f)&&angular.isDefined(f.$$route.access)&&!d.authorize(f.$$route.access)&&(d.isLoggedIn()?b.path("/"):b.path(c.baseUrl()+"/login"))})}])}),define("bazalt-auth/blAcl",["bazalt-auth/app"],function(a){"use strict";a.factory("blAcl",["$rootScope","UserResource","blConfig","$cookieStore","$log",function(a,b,c,d,e){var f={role:c.roles().public},g=function(b){b.role=b.login?c.roles().user:c.roles().public,f=b,e.info("User login",f),a.$$phase||a.$apply()};return a.user=f,d.get("user")&&b.get(function(a){a&&g(a)}),{authorize:function(a,b){return angular.isUndefined(a)?!0:(void 0===b&&(b=f.role),a.bitMask&b.bitMask)},isLoggedIn:function(a){return void 0===a&&(a=f),void 0!=a.login&&null!=a.login},register:function(a,b,c){$http.post("/register",a).success(function(a){g(a),b()}).error(c)},login:function(a,c,e){c=c||angular.noop,e=e||angular.noop,b.login(a,function(a){g(a),d.put("user",a),c(a)},function(a){e(a)})},logout:function(a,c){a=a||angular.noop,c=c||angular.noop,b.logout(function(b){g(b||{}),a(b)},c)},user:function(){return f}}}])}),define("bazalt-auth/routes",["bazalt-auth/app"],function(a){"use strict";a.config(["$routeProvider","$locationProvider","blConfigProvider",function(a,b,c){var d=c.$baseUrl,e=c.$templateUrl;a.when(d+"/register",{templateUrl:e+"/account/registerForm.html",controller:"RegisterCtrl"}).when(d+"/terms",{templateUrl:e+"/modals/terms.html",controller:"ModalCtrl"}).when(d+"/privacy",{templateUrl:e+"/modals/privacy.html",controller:"ModalCtrl"}).when(d+"/activationSent",{templateUrl:e+"/account/registerSuccessMessage.html"}).when(d+"/resendActivation",{templateUrl:e+"/account/resendActivationForm.html",controller:"RegisterCtrl"}).when(d+"/activationResent",{templateUrl:e+"/account/activationResentMessage.html",controller:"RegisterCtrl"}).when(d+"/activate/:activationKey",{templateUrl:e+"/account/activationResentMessage.html",controller:"RegisterCtrl"}).when(d+"/login",{templateUrl:e+"/account/loginForm.html",controller:"LoginCtrl"}).when(d+"/logout",{template:"Loading...",controller:"LogoutCtrl"})}])}),define("bazalt-auth",["angular","bazalt-auth/controllers","bazalt-auth/directives","bazalt-auth/factories","bazalt-auth/app","bazalt-auth/blConfig","bazalt-auth/blAcl","bazalt-auth/routes"],function(a){"use strict";return a.module("bazalt-auth")})}();
/*
//@ sourceMappingURL=bazalt-auth.min.map
*/